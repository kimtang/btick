source('C:\q\r\qserver\qserver.R')
source('C:/q/r/qserver/qserver.R')
library('ggplot2')
df <- data.frame(gp = factor(rep(letters[1:3], each = 10)),
y = rnorm(30))
# Compute sample mean and standard deviation in each group
library(plyr)
ds <- ddply(df, .(gp), summarise, mean = mean(y), sd = sd(y))
# Declare the data frame and common aesthetics.
# The summary data frame ds is used to plot
# larger red points in a second geom_point() layer.
# If the data = argument is not specified, it uses the
# declared data frame from ggplot(); ditto for the aesthetics.
ggplot(df, aes(x = gp, y = y)) +
geom_point() +
geom_point(data = ds, aes(y = mean),
colour = 'red', size = 3)
# Same plot as above, declaring only the data frame in ggplot().
# Note how the x and y aesthetics must now be declared in
# each geom_point() layer.
ggplot(df) +
geom_point(aes(x = gp, y = y)) +
geom_point(data = ds, aes(x = gp, y = mean),
colour = 'red', size = 3)
# Set up a skeleton ggplot object and add layers:
ggplot() +
geom_point(data = df, aes(x = gp, y = y)) +
geom_point(data = ds, aes(x = gp, y = mean),
colour = 'red', size = 3) +
geom_errorbar(data = ds, aes(x = gp, y = mean,
ymin = mean - sd, ymax = mean + sd),
colour = 'red', width = 0.4)
diamonds
View(diamonds)
grep("a+", c("abc", "def", "cba a", "aa"), perl=TRUE, value=TRUE)
grep("a+", c("abc", "def", "cba a", "aa"), perl=TRUE, value=TRUE)
grep("a+", c("abc", "def", "cba a", "aa"), perl=FALSE, value=TRUE)
grep("a+", 'asd', perl=FALSE, value=TRUE)
grep("a+", 'sssdasd', perl=FALSE, value=TRUE)
grep("a+", 'sssdasd')
grep("a+", 'sssdasd', value=TRUE)
regexpr("a+", 'sssdasd', value=TRUE)
regexpr("a+", 'sssdasd')
regexpr("a+", "sssdasd")
regexpr("a+", c("sssdasd"))
x <- c("abc", "def", "cba a", "aa")
m <- regexpr("a+", x)
regmatches(x, m)
m
regmatches(x, m)
library('ggplot2')
library('ggplot2')
source('C:/q/r/qserver/qserver.R')
execute
k
library('ggplot2')
source.with.encoding('C:/q/r/qserver/r/main.r', encoding='UTF-8')
source('C:/q/r/qserver/qserver.R')
source('C:/q/r/qserver/qserver.R')
kdb = open_connection('localhost',8888)
daily = execute(kdb,'daily')
head(daily)
library(quantmod)
xdaily = as.xts(daily)
head(daily)
xdaily = as.xts(daily)
xdaily = as.xts(daily,dateFormat="POSIXct")
class(daily$date)
rownames(daily) <- daily$date
daily = execute(kdb,'select from daily where sym=`AAPL')
aapl = execute(kdb,'select from daily where sym=`AAPL')
head(aapl)
rownames(daily) <- daily$date
xaapl = as.xts(aapl)
aapl = execute(kdb,'select from daily where sym=`AAPL')
rownames(aapl) <- aapl$date
xaapl = as.xts(aapl)
head(aapl)
aapl = execute(kdb,'select Open:open,High:high,Low:low,Close:close,Volume:size,Adjusted:close from daily where sym=`AAPL')
library(quantmod)
head(aapl)
rownames(aapl) <- aapl$date
xaapl = as.xts(aapl)
rownames(aapl) <- aapl$date
xaapl = as.xts(aapl)
aapl = execute(kdb,'select date,Open:open,High:high,Low:low,Close:close,Volume:size,Adjusted:close from daily where sym=`AAPL')
library(quantmod)
head(aapl)
rownames(aapl) <- aapl$date
xaapl = as.xts(aapl)
as.quantmod.OHLC(xaapl)
qaapl = as.quantmod.OHLC(xaapl)
chartSeries(xaapl, type = "bars", theme = chartTheme("white"))
xaapl = as.xts(aapl)
chartSeries(xaapl, type = "bars", theme = chartTheme("white"))
chartSeries(xaapl)
head(xaapl)
aapl = execute(kdb,'select date,Open:open,High:high,Low:low,Close:close,Volume:size,Adjusted:close from daily where sym=`AAPL')
library(quantmod)
head(aapl)
rownames(aapl) <- aapl$date
xaapl = as.xts(aapl)
head(xaapl)
xaapl = as.xts(aapl[-date])
head(xaapl)
xaapl = as.xts(aapl)
head(xaapl)
xaapl = as.fts.xts(aapl)
xaapl = as.xts(aapl)
library(xts)
head(aapl)
read.zoo
aapl = execute(kdb,'select Date:date,Open:open,High:high,Low:low,Close:close,Volume:size,Adjusted:close from daily where sym=`AAPL')
library(quantmod)
library(xts)
head(aapl)
read.zoo(aapl)
raapl = read.zoo(aapl)
chartSeries(raapl)
facet_wrap
library(ggplot2)
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **Help** toolbar button for more details on using R Markdown).
library('ggplot2')
source('C:/q/r/qserver/qserver.R')
kdb <- open_connection(5010)
kdb <- open_connection('localhost',5010)
execute(k,'0N!"Hello"')
execute(k,'10#trade')
execute(kdb,'10#trade')
execute(kdb,'0N!"Hello"')
library('ggplot2')
source('C:/q/r/qserver/qserver.R')
kdb <- open_connection('localhost',8888)
d <- execute(kdb,'d')
source('C:/quantumkdb/demo/visorderbook/obk.R')
dyn(d)
library('ggplot2')
g<-ggplot(data = d, aes(x=ind))
a<-g + geom_text(aes(y=price,label=qty,color=dir)) + theme_bw() +
xlab('') + opts(axis.text.x=theme_blank())
a<-g + geom_text(aes(y=price,label=qty,color=dir)) + theme_bw() +
xlab('')
b<-g + geom_text(aes(y=price,label=dqty,color=dir)) +
geom_point(aes(y=mid),color="green")
arrange(a,b,ncol=1)
theme_blank
opts(axis.text.x=theme_blank())
theme(axis.text.x=theme_blank())
theme_blank()
element_blank()
a<-g + geom_text(aes(y=price,label=qty,color=dir)) + theme_bw() +
xlab('') + element_blank()
b<-g + geom_text(aes(y=price,label=dqty,color=dir)) +
geom_point(aes(y=mid),color="green")
arrange(a,b,ncol=1)
b<-g + geom_text(aes(y=price,label=dqty,color=dir)) +
geom_point(aes(y=mid),color="green")+ element_blank()
arrange(a,b,ncol=1)
g<-ggplot(data = d, aes(x=ind))
a<-g + geom_text(aes(y=price,label=qty,color=dir)) + theme_bw() +
xlab('')
b<-g + geom_text(aes(y=price,label=dqty,color=dir)) +
geom_point(aes(y=mid),color="green")+ element_blank()
arrange(a,b,ncol=1)
g<-ggplot(data = d, aes(x=ind))
a<-g + geom_text(aes(y=price,label=qty,color=dir)) + theme_bw() +
xlab('') +theme(axis.text.x=theme_blank())
g<-ggplot(data = d, aes(x=ind))
a<-g + geom_text(aes(y=price,label=qty,color=dir)) + theme_bw() +
xlab('') +theme(axis.text.x=element_blank())
b<-g + geom_text(aes(y=price,label=dqty,color=dir)) +
geom_point(aes(y=mid),color="green")+ element_blank()
arrange(a,b,ncol=1)
g<-ggplot(data = d, aes(x=ind))
a<-g + geom_text(aes(y=price,label=qty,color=dir)) + theme_bw() +
xlab('') +theme(axis.text.x=element_blank())
b<-g + geom_text(aes(y=price,label=dqty,color=dir)) +
geom_point(aes(y=mid),color="green")+ element_blank()
arrange(a,b,ncol=1)+theme(axis.text.x=element_blank())
b<-g + geom_text(aes(y=price,label=dqty,color=dir)) +
geom_point(aes(y=mid),color="green") +theme(axis.text.x=element_blank())
arrange(a,b,ncol=1)
kdb <- open_connection('localhost',8887)
kdb <- open_connection('localhost',8887)
del <- execute(kdb,'del')
head(del)
g<- ggplot(del,aes(x=ind)) + geom_text(aes(y=dprx,label=dqty,color=clas))
ggplot(del,aes(x=ind)) + geom_text(aes(y=dprx,label=dqty,color=clas))
ggplot(del,aes(x=ind)) + geom_text(aes(y=dprx,label=dqty,color=clas)) +geom_point(aes(y=mid),color="green")
ggplot(del,aes(x=ind)) + geom_text(aes(y=dprx,label=dqty,color=clas))
+geom_point(aes(y=mid),color="green") + theme_bw()
ggplot(del,aes(x=ind)) + geom_text(aes(y=dprx,label=dqty,color=clas))
+geom_point(aes(y=mid),color="green") + theme_bw()
ggplot(del,aes(x=ind)) + geom_text(aes(y=dprx,label=dqty,color=clas)) +
geom_point(aes(y=mid),color="green") + theme_bw()
library('ggplot2')
source('C:/q/r/qserver/qserver.R')
kdb <- open_connection('localhost',19010)
kdb
bot <-execute(kdb,'bot')
g <- graph.data.frame(bot, directed=TRUE)
bot
g <- graph.data.frame(bot, directed=TRUE)
library('igraph')
g <- graph.data.frame(bot, directed=TRUE)
independent.vertex.sets(g, min=NULL, max=NULL)
i <-independent.vertex.sets(g, min=NULL, max=NULL)
l = largest.independent.vertex.sets(g)
i
l
l[1]
induced.subgraph(g, largest.independent.vertex.sets(g)[[1]])
ind <- induced.subgraph(g, largest.independent.vertex.sets(g)[[1]])
i
ind
plot(ind)
clique_num(g)
update.packages(igraph)
update.packages('igraph')
clique_num(g)
clique.number(g)
cliques(g)
grDevices
